name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production # 指定使用的 Environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t zeyuanduan/voc-project:latest .
          docker push zeyuanduan/voc-project:latest

      - name: Install SSH client
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Deploy to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_TEST_NAME: ${{ secrets.DB_TEST_NAME }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          GOOGLE_TRANSLATION_KEY: ${{ secrets.GOOGLE_TRANSLATION_KEY }}
          WORDNIK_KEY: ${{ secrets.WORDNIK_KEY }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_MAX_CONNECTIONS: ${{ secrets.REDIS_MAX_CONNECTIONS }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/ec2-user/myproject

            # Create .env file with environment variables
            cat <<EOT > .env
            SESSION_SECRET=${SESSION_SECRET}
            JWT_SECRET=${JWT_SECRET}
            PORT=${PORT}
            DB_USERNAME=${DB_USERNAME}
            DB_PASSWORD=${DB_PASSWORD}
            DB_NAME=${DB_NAME}
            DB_HOST=${DB_HOST}
            DB_TEST_NAME=${DB_TEST_NAME}
            GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
            GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
            GOOGLE_TRANSLATION_KEY=${GOOGLE_TRANSLATION_KEY}
            WORDNIK_KEY=${WORDNIK_KEY}
            REDIS_PASSWORD=${REDIS_PASSWORD}
            REDIS_HOST=${REDIS_HOST}
            REDIS_PORT=${REDIS_PORT}
            REDIS_MAX_CONNECTIONS=${REDIS_MAX_CONNECTIONS}
            EOT

            # Pull the latest image from Docker Hub
            docker-compose pull

            # Stop and remove old containers
            docker-compose down

            # Start the new containers
            docker-compose up -d
          EOF
